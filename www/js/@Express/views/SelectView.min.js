define(function(){"use strict";return Backbone.View.extend({events:{change:"change"},change:function(n){var t=$(n.target).val();t!=0&&this.action(t)},initialize:function(){if(this.options){this.done=this.options.done||this.done;this.action=this.options.action||this.action;this.collection=new Backbone.Collection;this.url=this.options.url;this.collection.on("reset",this.render,this)}},fetch:function(){if(!this.isFetch){this.isFetch=!0;var n=this.$el;this.collection.url=this.url;this.collection.fetch({reset:!0,error:function(){n.hideIndicator();$.Error(arguments[1])}})}return this},render:function(){this.$el.empty();var n=this.collection.models[0].get("items");return this.$el.append("<option value=''>...<\/value>"),_.each(n,function(n){this.props=n.data;this.$el.append("<option value='"+this.value("ID")+"'>"+this.value("Title")+"<\/option>")},this),this.done(),this},props:null,get:function(n){var t,i;if(!this.props)return $.Error("На задана коллекция для обработки ajax-данных"),null;for(t=0;t<this.props.length;t++)if(i=this.props[t],i.systemName===n)return i},value:function(n){var t=this.get(n);if(t)return t.value},done:function(){},action:function(){}})});